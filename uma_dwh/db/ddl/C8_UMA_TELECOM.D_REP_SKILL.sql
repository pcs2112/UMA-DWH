--  C8_UMA_TELECOM.D_REP_SKILL.sql
use UMA_DWH
go

--create schema UMA_TELECOM
-- go



--  C8_UMA_TELECOM.D_REP.sql

/*
Skills one to many SKILL

$id: integer,
displayName: string,
proficiency: integer(size 1),
desireToUse: integer(size 1)
id: string,
dateAdded: datetime


select * from UMA_TELECOM.D_REP_SKILL

select D_REP_ID, count(*) from UMA_TELECOM.D_REP_SKILL group by D_REP_ID
167

select REP_SKILL_displayName, count(*) from UMA_TELECOM.D_REP_SKILL group by REP_SKILL_displayName

select REP_SKILL_id_ALTERNATE, count(*) from UMA_TELECOM.D_REP_SKILL group by REP_SKILL_id_ALTERNATE

select REP_SKILL_ID, count(*) from UMA_TELECOM.D_REP_SKILL group by REP_SKILL_ID


*/




IF EXISTS (SELECT * FROM sys.objects so JOIN  sys.schemas ss on (so.schema_id = ss.schema_id) WHERE so.type = 'U' AND so.name = 'X_REP_TO_REP_SKILL' and ss.name = 'UMA_TELECOM')
	DROP TABLE UMA_TELECOM.X_REP_TO_REP_SKILL
GO


CREATE TABLE UMA_TELECOM.X_REP_TO_REP_SKILL(
		ID INT NOT NULL IDENTITY (1,1),
		INSERT_DTTM DATETIME CONSTRAINT UMA_TELECOM_X_REP_TO_REP_SKILL_INSERT_DTTM_DF DEFAULT getdate() NOT NULL,
		UPDATE_DTTM DATETIME CONSTRAINT UMA_TELECOM_X_REP_TO_REP_SKILL_UPDATE_DTTM_DF DEFAULT getdate() NOT NULL,
		LST_MOD_USER VARCHAR(80) CONSTRAINT UMA_TELECOM_X_REP_TO_REP_SKILL_LST_MOD_USER_DF DEFAULT user_name() NOT NULL,
		MSTR_LOAD_ID INT CONSTRAINT UMA_TELECOM_X_REP_TO_REP_SKILL_MSTR_LOAD_ID_DF DEFAULT (-1) NOT NULL,
		D_REP_ID					integer			NOT NULL,
		D_REP_SKILL_ID				integer			NOT NULL,
		REP_SKILL_ID				integer,
		REP_SKILL_proficiency		integer,
		REP_SKILL_desireToUse		integer,
		REP_SKILL_id_ALTERNATE		nVARCHAR(300)	,
		REP_SKILL_dateAdded			datetime2	NOT NULL,
		REP_SKILL_dateRemoved		datetime2		NULL,
 CONSTRAINT PK_UMA_TELECOM_X_REP_TO_REP_SKILL		PRIMARY KEY NONCLUSTERED 
(
		ID				ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
)
GO


CREATE NONCLUSTERED INDEX  UMA_TELECOM_X_REP_TO_REP_SKILL_IDX01   on UMA_TELECOM.X_REP_TO_REP_SKILL 
(
		ID				ASC,
		D_REP_ID		ASC,
		D_REP_SKILL_ID	ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO


CREATE NONCLUSTERED INDEX  UMA_TELECOM_X_REP_TO_REP_SKILL_IDX02   on UMA_TELECOM.X_REP_TO_REP_SKILL 
(
		D_REP_SKILL_ID	ASC,
		D_REP_ID		ASC,
		ID				ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE NONCLUSTERED INDEX  UMA_TELECOM_X_REP_TO_REP_SKILL_IDX03   on UMA_TELECOM.X_REP_TO_REP_SKILL 
(
		REP_SKILL_dateRemoved   asc,
		D_REP_SKILL_ID	ASC,
		D_REP_ID		ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO




CREATE TRIGGER UMA_TELECOM.X_REP_TO_REP_SKILL_UD_TRIG
ON UMA_TELECOM.X_REP_TO_REP_SKILL
AFTER UPDATE
AS  BEGIN
    UPDATE UMA_TELECOM.X_REP_TO_REP_SKILL
    SET UPDATE_DTTM = GETDATE()
    WHERE ID IN (SELECT DISTINCT ID FROM INSERTED)
END
GO






IF EXISTS (SELECT * FROM sys.objects so JOIN  sys.schemas ss on (so.schema_id = ss.schema_id) WHERE so.type = 'U' AND so.name = 'D_REP_SKILL' and ss.name = 'UMA_TELECOM')
	DROP TABLE UMA_TELECOM.D_REP_SKILL
GO



CREATE TABLE UMA_TELECOM.D_REP_SKILL(
		ID INT NOT NULL IDENTITY (1,1),
		INSERT_DTTM DATETIME CONSTRAINT UMA_TELECOM_D_REP_SKILL_INSERT_DTTM_DF DEFAULT getdate() NOT NULL,
		UPDATE_DTTM DATETIME CONSTRAINT UMA_TELECOM_D_REP_SKILL_UPDATE_DTTM_DF DEFAULT getdate() NOT NULL,
		LST_MOD_USER VARCHAR(80) CONSTRAINT UMA_TELECOM_D_REP_SKILL_LST_MOD_USER_DF DEFAULT user_name() NOT NULL,
		MSTR_LOAD_ID INT CONSTRAINT UMA_TELECOM_D_REP_SKILL_MSTR_LOAD_ID_DF DEFAULT (-1) NOT NULL,
		REP_SKILL_displayName		VARCHAR(100)	NOT NULL,
		REP_SKILL_DAILY_SNAPSHOT	varchar(8) CONSTRAINT UMA_TELECOM_REP_SKILL_DAILY_SNAPSHOT_DF DEFAULT 'CHANGE' NOT NULL
 CONSTRAINT PK_UMA_TELECOM_D_REP_SKILL		PRIMARY KEY NONCLUSTERED 
(
		ID				ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
)
GO



CREATE NONCLUSTERED INDEX  UMA_TELECOM_D_REP_SKILL_IDX01   on UMA_TELECOM.D_REP_SKILL 
(
		ID				ASC,
		REP_SKILL_displayName		ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO


CREATE NONCLUSTERED INDEX  UMA_TELECOM_D_REP_SKILL_IDX02   on UMA_TELECOM.D_REP_SKILL 
(
		REP_SKILL_displayName			ASC,
		ID		ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)

GO


CREATE UNIQUE INDEX  UMA_TELECOM_D_REP_SKILL_IDX03   on UMA_TELECOM.D_REP_SKILL 
(
		REP_SKILL_displayName			ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)

GO


CREATE TRIGGER UMA_TELECOM.D_REP_SKILL_UD_TRIG
ON UMA_TELECOM.D_REP_SKILL
AFTER UPDATE
AS  BEGIN
    UPDATE UMA_TELECOM.D_REP_SKILL
    SET UPDATE_DTTM = GETDATE()
    WHERE ID IN (SELECT DISTINCT ID FROM INSERTED)
END
GO


